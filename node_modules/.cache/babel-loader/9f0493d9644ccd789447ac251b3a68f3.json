{"ast":null,"code":"var _jsxFileName = \"/Users/ivovanoverstraeten/Desktop/TwitterBlock/src/pages/Settings.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; // import { Link } from \"react-router-dom\";\n\nimport \"./Settings.css\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { Input } from \"web3uikit\";\nimport pfp1 from \"../images/pfp1.png\";\nimport pfp2 from \"../images/pfp2.png\";\nimport pfp3 from \"../images/pfp3.png\";\nimport pfp4 from \"../images/pfp4.png\";\nimport pfp5 from \"../images/pfp5.png\";\nimport { defaultImgs } from \"../defaultimgs\";\nimport { useMoralis, useMoralisWeb3Api } from \"react-moralis\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Settings = () => {\n  _s();\n\n  const pfps = [pfp1, pfp2, pfp3, pfp4, pfp5];\n  const [selectedPFP, setSelectedPFP] = useState();\n  const inputFile = useRef(null);\n  const [selectedFile, setSelectedFile] = useState(defaultImgs[1]);\n  const [theFile, setTheFile] = useState();\n  const [username, setUsername] = useState();\n  const [bio, setBio] = useState();\n  const {\n    Moralis,\n    isAuthenticated,\n    account\n  } = useMoralis(); // const Web3Api = useMoralisWeb3Api();\n  // const resolveLink = (url) => {\n  //   if (!url || !url.includes(\"ipfs://\")) return url;\n  //   return url.replace(\"ipfs://\", \"https://gateway.ipfs.io/ipfs/\");\n  // };\n  // useEffect(() => {\n  //   const fetchNFTs = async () => {\n  //     const options = {\n  //       chain: \"mumbai\",\n  //       address: account\n  //     }\n  //     const mumbaiNFTs = await Web3Api.account.getNFTs(options);\n  //     const images = mumbaiNFTs.result.map(\n  //       (e) => resolveLink(JSON.parse(e.metadata)?.image)\n  //     );\n  //     setPfps(images);\n  //   }\n  //   fetchNFTs();\n  // },[isAuthenticated, account])\n\n  const onBannerClick = () => {\n    inputFile.current.click();\n  };\n\n  const changeHandler = event => {\n    const img = event.target.files[0];\n    setTheFile(img);\n    setSelectedFile(URL.createObjectURL(img));\n  };\n\n  const saveEdits = async () => {\n    const User = Moralis.Object.extend(\"_User\");\n    const query = new Moralis.Query(User);\n    const myDetails = await query.first();\n\n    if (bio) {\n      myDetails.set(\"bio\", bio);\n    }\n\n    if (selectedPFP) {\n      myDetails.set(\"pfp\", selectedPFP);\n    }\n\n    if (username) {\n      myDetails.set(\"username\", username);\n    }\n\n    if (theFile) {\n      const data = theFile;\n      const file = new Moralis.File(data.name, data);\n      await file.saveIPFS();\n      myDetails.set(\"banner\", file.ipfs());\n    }\n\n    await myDetails.save();\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageIdentify\",\n      children: \"Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settingsPage\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        label: \"Name\",\n        name: \"NameChange\",\n        width: \"100%\",\n        labelBgColor: \"#141d26\",\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"Bio\",\n        name: \"bioChange\",\n        width: \"100%\",\n        labelBgColor: \"#141d26\",\n        onChange: e => setBio(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pfp\",\n        children: [\"Profile Image (Your NFTs)\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pfpOptions\",\n          children: pfps.map((e, i) => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: e,\n                className: selectedPFP === e ? \"pfpOptionSelected\" : \"pfpOption\",\n                onClick: () => {\n                  setSelectedPFP(pfps[i]);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this)\n            }, void 0, false);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pfp\",\n        children: [\"Profile Banner\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pfpOptions\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedFile,\n            onClick: onBannerClick,\n            className: \"banner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"file\",\n            ref: inputFile,\n            onChange: changeHandler,\n            style: {\n              display: \"none\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"save\",\n        onClick: () => saveEdits(),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Settings, \"o2+MAlaxU9BHPV/XJ25gVIenh8o=\", false, function () {\n  return [useMoralis];\n});\n\n_c = Settings;\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["/Users/ivovanoverstraeten/Desktop/TwitterBlock/src/pages/Settings.js"],"names":["React","useState","useRef","useEffect","Input","pfp1","pfp2","pfp3","pfp4","pfp5","defaultImgs","useMoralis","useMoralisWeb3Api","Settings","pfps","selectedPFP","setSelectedPFP","inputFile","selectedFile","setSelectedFile","theFile","setTheFile","username","setUsername","bio","setBio","Moralis","isAuthenticated","account","onBannerClick","current","click","changeHandler","event","img","target","files","URL","createObjectURL","saveEdits","User","Object","extend","query","Query","myDetails","first","set","data","file","File","name","saveIPFS","ipfs","save","window","location","reload","e","value","map","i","display"],"mappings":"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","sourcesContent":["import React from \"react\";\n// import { Link } from \"react-router-dom\";\nimport \"./Settings.css\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { Input } from \"web3uikit\";\nimport pfp1 from \"../images/pfp1.png\";\nimport pfp2 from \"../images/pfp2.png\";\nimport pfp3 from \"../images/pfp3.png\";\nimport pfp4 from \"../images/pfp4.png\";\nimport pfp5 from \"../images/pfp5.png\";\nimport { defaultImgs } from \"../defaultimgs\";\nimport { useMoralis, useMoralisWeb3Api } from \"react-moralis\";\n\nconst Settings = () => {\n\n  const pfps = [pfp1, pfp2, pfp3, pfp4, pfp5];\n  const [selectedPFP, setSelectedPFP] = useState();\n  const inputFile = useRef(null);\n  const [selectedFile, setSelectedFile] = useState(defaultImgs[1]);\n  const [theFile, setTheFile] = useState();\n  const [username, setUsername] = useState();\n  const [bio, setBio] = useState();\n  const { Moralis, isAuthenticated, account } = useMoralis();\n  // const Web3Api = useMoralisWeb3Api();\n\n\n  // const resolveLink = (url) => {\n  //   if (!url || !url.includes(\"ipfs://\")) return url;\n  //   return url.replace(\"ipfs://\", \"https://gateway.ipfs.io/ipfs/\");\n  // };\n\n  // useEffect(() => {\n\n  //   const fetchNFTs = async () => {\n  //     const options = {\n  //       chain: \"mumbai\",\n  //       address: account\n  //     }\n\n  //     const mumbaiNFTs = await Web3Api.account.getNFTs(options);\n  //     const images = mumbaiNFTs.result.map(\n  //       (e) => resolveLink(JSON.parse(e.metadata)?.image)\n  //     );\n  //     setPfps(images);\n  //   }\n\n  //   fetchNFTs();\n\n  // },[isAuthenticated, account])\n\n  const onBannerClick = () => {\n    inputFile.current.click();\n  };\n\n  const changeHandler = (event) => {\n    \n    const img = event.target.files[0];\n    setTheFile(img);\n    setSelectedFile(URL.createObjectURL(img));\n  };\n\n  const saveEdits = async () => {\n    const User = Moralis.Object.extend(\"_User\");\n    const query = new Moralis.Query(User);\n    const myDetails = await query.first();\n\n    if (bio){\n      myDetails.set(\"bio\", bio);\n    }\n\n    if (selectedPFP){\n      myDetails.set(\"pfp\", selectedPFP);\n    }\n\n    if (username){\n      myDetails.set(\"username\", username);\n    }\n\n    if (theFile) {\n      const data = theFile;\n      const file = new Moralis.File(data.name, data);\n      await file.saveIPFS();\n      myDetails.set(\"banner\", file.ipfs());\n    }\n\n    await myDetails.save();\n    window.location.reload();\n  }\n\n  return (\n    <>\n      <div className=\"pageIdentify\">Settings</div>\n      <div className=\"settingsPage\">\n        <Input\n          label=\"Name\"\n          name=\"NameChange\"\n          width=\"100%\"\n          labelBgColor=\"#141d26\"\n          onChange={(e)=> setUsername(e.target.value)}\n        />\n\n        <Input\n          label=\"Bio\"\n          name=\"bioChange\"\n          width=\"100%\"\n          labelBgColor=\"#141d26\"\n          onChange={(e)=> setBio(e.target.value)}\n        />\n\n        <div className=\"pfp\">\n          Profile Image (Your NFTs)\n\n          <div className=\"pfpOptions\">\n            {pfps.map((e,i) => {\n\n              return(\n                <>\n                <img\n                src={e}\n                className={ \n                  selectedPFP === e ? \"pfpOptionSelected\" : \"pfpOption\"\n                }\n                onClick={() => {setSelectedPFP(pfps[i]);}}\n                ></img>\n                </>\n              )\n            })}\n          </div>\n        </div>\n\n       \n\n        <div className=\"pfp\">\n          Profile Banner\n          <div className=\"pfpOptions\">\n            <img\n              src={selectedFile}\n              onClick={onBannerClick}\n              className=\"banner\"\n            ></img>\n            <input\n              type=\"file\"\n              name=\"file\"\n              ref={inputFile}\n              onChange={changeHandler}\n              style={{ display: \"none\" }}\n            />\n          </div>\n        </div>\n        <div className=\"save\"  onClick={() => saveEdits()} > \n          Save\n        </div>  \n      </div>\n    </>\n  );\n};\n\nexport default Settings;\n\n"]},"metadata":{},"sourceType":"module"}