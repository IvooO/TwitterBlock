{"ast":null,"code":"var _jsxFileName = \"/Users/ivovanoverstraeten/Desktop/TwitterBlock/src/pages/Settings.js\";\nimport React from \"react\"; // import { Link } from \"react-router-dom\";\n\nimport \"./Settings.css\"; // import { useState, useRef, useEffect } from \"react\";\n\nimport { Input } from \"web3uikit\";\nimport pfp1 from \"../images/pfp1.png\";\nimport pfp2 from \"../images/pfp2.png\";\nimport pfp3 from \"../images/pfp3.png\";\nimport pfp4 from \"../images/pfp4.png\";\nimport pfp5 from \"../images/pfp5.png\"; // import { defaultImgs } from \"../defaultimgs\";\n// import { useMoralis, useMoralisWeb3Api } from \"react-moralis\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Settings = () => {\n  const pfps = [pfp1, pfp2, pfp3, pfp5, pfp5]; // const [selectedPFP, setSelectedPFP] = useState();\n  // const inputFile = useRef(null);\n  // const [selectedFile, setSelectedFile] = useState(defaultImgs[1]);\n  // const [theFile, setTheFile] = useState();\n  // const [username, setUsername] = useState();\n  // const [bio, setBio] = useState();\n  // // const { Moralis, isAuthenticated, account } = useMoralis();\n  // const Web3Api = useMoralisWeb3Api();\n  // const resolveLink = (url) => {\n  //   if (!url || !url.includes(\"ipfs://\")) return url;\n  //   return url.replace(\"ipfs://\", \"https://gateway.ipfs.io/ipfs/\");\n  // };\n  // useEffect(() => {\n  //   const fetchNFTs = async () => {\n  //     const options = {\n  //       chain: \"mumbai\",\n  //       address: account\n  //     }\n  //     const mumbaiNFTs = await Web3Api.account.getNFTs(options);\n  //     const images = mumbaiNFTs.result.map(\n  //       (e) => resolveLink(JSON.parse(e.metadata)?.image)\n  //     );\n  //     setPfps(images);\n  //   }\n  //   fetchNFTs();\n  // },[isAuthenticated, account])\n  // const onBannerClick = () => {\n  //   inputFile.current.click();\n  // };\n  // const changeHandler = (event) => {\n  //   const img = event.target.files[0];\n  //   setTheFile(img);\n  //   setSelectedFile(URL.createObjectURL(img));\n  // };\n  // const saveEdits = async () => {\n  //   const User = Moralis.Object.extend(\"_User\");\n  //   const query = new Moralis.Query(User);\n  //   const myDetails = await query.first();\n  //   if (bio){\n  //     myDetails.set(\"bio\", bio);\n  //   }\n  //   if (selectedPFP){\n  //     myDetails.set(\"pfp\", selectedPFP);\n  //   }\n  //   if (username){\n  //     myDetails.set(\"username\", username);\n  //   }\n  //   if (theFile) {\n  //     const data = theFile;\n  //     const file = new Moralis.File(data.name, data);\n  //     await file.saveIPFS();\n  //     myDetails.set(\"banner\", file.ipfs());\n  //   }\n  //   await myDetails.save();\n  //   window.location.reload();\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageIdentify\",\n      children: \"Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settingsPage\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        label: \"Name\",\n        name: \"NameChange\",\n        width: \"100%\",\n        labelBgColor: \"#141d26\" // onChange={(e)=> setUsername(e.target.value)}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"Bio\",\n        name: \"bioChange\",\n        width: \"100%\",\n        labelBgColor: \"#141d26\" // onChange={(e)=> setBio(e.target.value)}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pfp\",\n        children: [\"Profile Image (Your NFTs)\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pfpOptions\",\n          children: pfps.map((e, i) => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: e,\n                className: selectedPFP === e ? \"pfpOptionSelected\" : \"pfpOption\",\n                onClick: () => {\n                  setSelectedPFP(pfps[i]);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this)\n            }, void 0, false);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Settings;\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["/Users/ivovanoverstraeten/Desktop/TwitterBlock/src/pages/Settings.js"],"names":["React","Input","pfp1","pfp2","pfp3","pfp4","pfp5","Settings","pfps","map","e","i","selectedPFP","setSelectedPFP"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAO,gBAAP,C,CACA;;AACA,SAASC,KAAT,QAAsB,WAAtB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB,C,CACA;AACA;;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAErB,QAAMC,IAAI,GAAG,CAACN,IAAD,EAAOC,IAAP,EAAaC,IAAb,EAAmBE,IAAnB,EAAyBA,IAAzB,CAAb,CAFqB,CAGrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,IAAI,EAAC,YAFP;AAGE,QAAA,KAAK,EAAC,MAHR;AAIE,QAAA,YAAY,EAAC,SAJf,CAKE;;AALF;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,KAAD;AACE,QAAA,KAAK,EAAC,KADR;AAEE,QAAA,IAAI,EAAC,WAFP;AAGE,QAAA,KAAK,EAAC,MAHR;AAIE,QAAA,YAAY,EAAC,SAJf,CAKE;;AALF;AAAA;AAAA;AAAA;AAAA,cATF,eAiBE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,6DAGE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,oBACGE,IAAI,CAACC,GAAL,CAAS,CAACC,CAAD,EAAGC,CAAH,KAAS;AAEjB,gCACE;AAAA,qCACA;AACA,gBAAA,GAAG,EAAED,CADL;AAEA,gBAAA,SAAS,EACPE,WAAW,KAAKF,CAAhB,GAAoB,mBAApB,GAA0C,WAH5C;AAKA,gBAAA,OAAO,EAAE,MAAM;AAACG,kBAAAA,cAAc,CAACL,IAAI,CAACG,CAAD,CAAL,CAAd;AAAyB;AALzC;AAAA;AAAA;AAAA;AAAA;AADA,6BADF;AAWD,WAbA;AADH;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAkED,CA9ID;;KAAMJ,Q;AAgJN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\n// import { Link } from \"react-router-dom\";\nimport \"./Settings.css\";\n// import { useState, useRef, useEffect } from \"react\";\nimport { Input } from \"web3uikit\";\nimport pfp1 from \"../images/pfp1.png\";\nimport pfp2 from \"../images/pfp2.png\";\nimport pfp3 from \"../images/pfp3.png\";\nimport pfp4 from \"../images/pfp4.png\";\nimport pfp5 from \"../images/pfp5.png\";\n// import { defaultImgs } from \"../defaultimgs\";\n// import { useMoralis, useMoralisWeb3Api } from \"react-moralis\";\n\nconst Settings = () => {\n\n  const pfps = [pfp1, pfp2, pfp3, pfp5, pfp5];\n  // const [selectedPFP, setSelectedPFP] = useState();\n  // const inputFile = useRef(null);\n  // const [selectedFile, setSelectedFile] = useState(defaultImgs[1]);\n  // const [theFile, setTheFile] = useState();\n  // const [username, setUsername] = useState();\n  // const [bio, setBio] = useState();\n  // // const { Moralis, isAuthenticated, account } = useMoralis();\n  // const Web3Api = useMoralisWeb3Api();\n\n\n  // const resolveLink = (url) => {\n  //   if (!url || !url.includes(\"ipfs://\")) return url;\n  //   return url.replace(\"ipfs://\", \"https://gateway.ipfs.io/ipfs/\");\n  // };\n\n  // useEffect(() => {\n\n  //   const fetchNFTs = async () => {\n  //     const options = {\n  //       chain: \"mumbai\",\n  //       address: account\n  //     }\n\n  //     const mumbaiNFTs = await Web3Api.account.getNFTs(options);\n  //     const images = mumbaiNFTs.result.map(\n  //       (e) => resolveLink(JSON.parse(e.metadata)?.image)\n  //     );\n  //     setPfps(images);\n  //   }\n\n  //   fetchNFTs();\n\n  // },[isAuthenticated, account])\n\n  // const onBannerClick = () => {\n  //   inputFile.current.click();\n  // };\n\n  // const changeHandler = (event) => {\n    \n  //   const img = event.target.files[0];\n  //   setTheFile(img);\n  //   setSelectedFile(URL.createObjectURL(img));\n  // };\n\n  // const saveEdits = async () => {\n  //   const User = Moralis.Object.extend(\"_User\");\n  //   const query = new Moralis.Query(User);\n  //   const myDetails = await query.first();\n\n  //   if (bio){\n  //     myDetails.set(\"bio\", bio);\n  //   }\n\n  //   if (selectedPFP){\n  //     myDetails.set(\"pfp\", selectedPFP);\n  //   }\n\n  //   if (username){\n  //     myDetails.set(\"username\", username);\n  //   }\n\n  //   if (theFile) {\n  //     const data = theFile;\n  //     const file = new Moralis.File(data.name, data);\n  //     await file.saveIPFS();\n  //     myDetails.set(\"banner\", file.ipfs());\n  //   }\n\n  //   await myDetails.save();\n  //   window.location.reload();\n  // }\n\n  return (\n    <>\n      <div className=\"pageIdentify\">Settings</div>\n      <div className=\"settingsPage\">\n        <Input\n          label=\"Name\"\n          name=\"NameChange\"\n          width=\"100%\"\n          labelBgColor=\"#141d26\"\n          // onChange={(e)=> setUsername(e.target.value)}\n        />\n\n        <Input\n          label=\"Bio\"\n          name=\"bioChange\"\n          width=\"100%\"\n          labelBgColor=\"#141d26\"\n          // onChange={(e)=> setBio(e.target.value)}\n        />\n\n        <div className=\"pfp\">\n          Profile Image (Your NFTs)\n\n          <div className=\"pfpOptions\">\n            {pfps.map((e,i) => {\n\n              return(\n                <>\n                <img\n                src={e}\n                className={\n                  selectedPFP === e ? \"pfpOptionSelected\" : \"pfpOption\"\n                }\n                onClick={() => {setSelectedPFP(pfps[i]);}}\n                ></img>\n                </>\n              )\n            })}\n          </div>\n        </div>\n\n        {/* \n\n        <div className=\"pfp\">\n          Profile Banner\n          <div className=\"pfpOptions\">\n            <img\n              src={selectedFile}\n              onClick={onBannerClick}\n              className=\"banner\"\n            ></img>\n            <input\n              type=\"file\"\n              name=\"file\"\n              ref={inputFile}\n              onChange={changeHandler}\n              style={{ display: \"none\" }}\n            />\n          </div>\n        </div>\n        <div className=\"save\" onClick={() => saveEdits()}>\n          Save\n        </div> */}\n      </div>\n    </>\n  );\n};\n\nexport default Settings;\n\n"]},"metadata":{},"sourceType":"module"}