{"ast":null,"code":"var _jsxFileName = \"/Users/ivovanoverstraeten/Desktop/TwitterBlock/src/pages/Home.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./Home.css\";\nimport { defaultImgs } from \"../defaultimgs\";\nimport profilePic from \"../images/profilePic.jpg\";\nimport { TextArea, Icon } from \"web3uikit\";\nimport { useState, useRef } from \"react\";\nimport TweetInFeed from \"../components/TweetInFeed\";\nimport { useMoralis, useWeb3ExecuteFunction } from \"react-moralis\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const {\n    Moralis\n  } = useMoralis();\n  const user = Moralis.User.current();\n  const contractProcessor = useWeb3ExecuteFunction();\n  const inputFile = useRef(null);\n  const [selectedFile, setSelectedFile] = useState();\n  const [theFile, setTheFile] = useState();\n  const [tweet, setTweet] = useState(); // async function maticTweet() {\n  //   if (!tweet) return;\n  //   let img;\n  //   if (theFile) {\n  //     const data = theFile;\n  //     const file = new Moralis.File(data.name, data);\n  //     await file.saveIPFS();\n  //     img = file.ipfs();\n  //   }else{\n  //     img = \"No Img\"\n  //   }\n  //   let options = {\n  //     contractAddress: \"0x8E452D8573e2B1e8341D3f4aCC07939247cf99c6\",\n  //     functionName: \"addTweet\",\n  //     abi: [{\n  //       \"inputs\": [\n  //         {\n  //           \"internalType\": \"string\",\n  //           \"name\": \"tweetTxt\",\n  //           \"type\": \"string\"\n  //         },\n  //         {\n  //           \"internalType\": \"string\",\n  //           \"name\": \"tweetImg\",\n  //           \"type\": \"string\"\n  //         }\n  //       ],\n  //       \"name\": \"addTweet\",\n  //       \"outputs\": [],\n  //       \"stateMutability\": \"payable\",\n  //       \"type\": \"function\"\n  //     }],\n  //     params: {\n  //       tweetTxt: tweet,\n  //       tweetImg: img,\n  //     },\n  //     msgValue: Moralis.Units.ETH(1),\n  //   }\n  //   await contractProcessor.fetch({\n  //     params: options,\n  //     onSuccess: () => {\n  //       saveTweet();\n  //     },\n  //     onError: (error) => {\n  //       console.log(error.data.message)\n  //     }\n  //   });\n  // }\n\n  async function saveTweet() {\n    if (!tweet) return;\n    const Tweets = Moralis.Object.extend(\"Tweets\");\n    const newTweet = new Tweets();\n    newTweet.set(\"tweetTxt\", tweet);\n    newTweet.set(\"tweeterPfp\", user.attributes.pfp);\n    newTweet.set(\"tweeterAcc\", user.attributes.ethAddress);\n    newTweet.set(\"tweeterUserName\", user.attributes.username);\n\n    if (theFile) {\n      const data = theFile;\n      const file = new Moralis.File(data.name, data);\n      await file.saveIPFS();\n      newTweet.set(\"tweetImg\", file.ipfs());\n    }\n\n    await newTweet.save();\n    window.location.reload();\n  }\n\n  const onImageClick = () => {\n    inputFile.current.click();\n  };\n\n  const changeHandler = event => {\n    const img = event.target.files[0];\n    setTheFile(img);\n    setSelectedFile(URL.createObjectURL(img));\n  }; // end\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageIdentify\",\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainContent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileTweet\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: user.attributes.pfp ? user.attributes.pfp : defaultImgs[0],\n          className: \"profilePic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tweetBox\",\n          children: [/*#__PURE__*/_jsxDEV(TextArea, {\n            label: \"\",\n            name: \"tweetTxtArea\",\n            value: \"GM World\",\n            type: \"text\",\n            onChange: e => setTweet(e.target.value),\n            width: \"95%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"imgOrTweet\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"imgDiv\",\n              onClick: onImageClick,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"file\",\n                ref: inputFile // onChange={changeHandler}\n                ,\n                style: {\n                  display: \"none\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(Icon, {\n                fill: \"#1DA1F2\",\n                size: 20,\n                svg: \"image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tweetOptions\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tweet\",\n                children: \"Tweet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tweet\",\n                style: {\n                  backgroundColor: \"#8247e5\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  fill: \"#ffffff\",\n                  size: 20,\n                  svg: \"matic\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 9\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(TweetInFeed, {\n        profile: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Home, \"0jjHlqwxF1WgMNz71ldmzPIgwAk=\", false, function () {\n  return [useMoralis, useWeb3ExecuteFunction];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/ivovanoverstraeten/Desktop/TwitterBlock/src/pages/Home.js"],"names":["React","defaultImgs","profilePic","TextArea","Icon","useState","useRef","TweetInFeed","useMoralis","useWeb3ExecuteFunction","Home","Moralis","user","User","current","contractProcessor","inputFile","selectedFile","setSelectedFile","theFile","setTheFile","tweet","setTweet","saveTweet","Tweets","Object","extend","newTweet","set","attributes","pfp","ethAddress","username","data","file","File","name","saveIPFS","ipfs","save","window","location","reload","onImageClick","click","changeHandler","event","img","target","files","URL","createObjectURL","e","value","display","backgroundColor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./Home.css\";\nimport { defaultImgs } from \"../defaultimgs\";\nimport profilePic from \"../images/profilePic.jpg\";\nimport { TextArea, Icon } from \"web3uikit\";\nimport { useState, useRef } from \"react\";\nimport TweetInFeed from \"../components/TweetInFeed\";\nimport { useMoralis, useWeb3ExecuteFunction } from \"react-moralis\";\n\nconst Home = () => {\n\n  const { Moralis} = useMoralis();\n  const user = Moralis.User.current();\n  const contractProcessor = useWeb3ExecuteFunction();\n\n  const inputFile = useRef(null);\n  const [selectedFile, setSelectedFile] = useState();\n  const [theFile, setTheFile] = useState();\n  const [tweet, setTweet] = useState();\n\n  // async function maticTweet() {\n\n  //   if (!tweet) return;\n\n  //   let img;\n  //   if (theFile) {\n  //     const data = theFile;\n  //     const file = new Moralis.File(data.name, data);\n  //     await file.saveIPFS();\n  //     img = file.ipfs();\n  //   }else{\n  //     img = \"No Img\"\n  //   }\n\n  //   let options = {\n  //     contractAddress: \"0x8E452D8573e2B1e8341D3f4aCC07939247cf99c6\",\n  //     functionName: \"addTweet\",\n  //     abi: [{\n  //       \"inputs\": [\n  //         {\n  //           \"internalType\": \"string\",\n  //           \"name\": \"tweetTxt\",\n  //           \"type\": \"string\"\n  //         },\n  //         {\n  //           \"internalType\": \"string\",\n  //           \"name\": \"tweetImg\",\n  //           \"type\": \"string\"\n  //         }\n  //       ],\n  //       \"name\": \"addTweet\",\n  //       \"outputs\": [],\n  //       \"stateMutability\": \"payable\",\n  //       \"type\": \"function\"\n  //     }],\n  //     params: {\n  //       tweetTxt: tweet,\n  //       tweetImg: img,\n  //     },\n  //     msgValue: Moralis.Units.ETH(1),\n  //   }\n\n  //   await contractProcessor.fetch({\n  //     params: options,\n  //     onSuccess: () => {\n  //       saveTweet();\n  //     },\n  //     onError: (error) => {\n  //       console.log(error.data.message)\n  //     }\n  //   });\n\n  // }\n\n\n  async function saveTweet() {\n\n    if(!tweet) return;\n\n    const Tweets = Moralis.Object.extend(\"Tweets\");\n\n    const newTweet = new Tweets();\n\n    newTweet.set(\"tweetTxt\", tweet);\n    newTweet.set(\"tweeterPfp\", user.attributes.pfp);\n    newTweet.set(\"tweeterAcc\", user.attributes.ethAddress);\n    newTweet.set(\"tweeterUserName\", user.attributes.username);\n\n    if (theFile) {\n      const data = theFile;\n      const file = new Moralis.File(data.name, data);\n      await file.saveIPFS();\n      newTweet.set(\"tweetImg\", file.ipfs());\n    }\n\n    await newTweet.save();\n    window.location.reload();\n\n  }\n\n  const onImageClick = () => {\n    inputFile.current.click();\n  };\n\n  const changeHandler = (event) => {\n    const img = event.target.files[0];\n    setTheFile(img);\n    setSelectedFile(URL.createObjectURL(img));\n   };\n\n\n\n  // end\n\n\n\n\n  return (\n    <>\n    <div className=\"pageIdentify\">Home</div>\n    <div className=\"mainContent\">\n     <div className=\"profileTweet\">\n     <img src={user.attributes.pfp ? user.attributes.pfp : defaultImgs[0]} className=\"profilePic\"></img>\n    <div className=\"tweetBox\">\n    <TextArea\n    label=\"\"\n    name=\"tweetTxtArea\"\n    value=\"GM World\"\n    type=\"text\"\n    onChange={(e) => setTweet(e.target.value)}\n    width=\"95%\">\n\n    </TextArea>\n\n    \n\n    <div className=\"imgOrTweet\">\n      <div className=\"imgDiv\" onClick={onImageClick}>\n      <input\n        type=\"file\"\n        name=\"file\"\n        ref={inputFile}\n        // onChange={changeHandler}\n        style={{display: \"none\"}}\n\n      />\n\n      <Icon\n      fill=\"#1DA1F2\" size={20} svg=\"image\"></Icon>\n      </div> \n\n      <div className=\"tweetOptions\">\n        <div className=\"tweet\">Tweet</div> \n         <div className=\"tweet\" style={{ backgroundColor : \"#8247e5\" }}> \n        <Icon fill=\"#ffffff\" size={20} svg=\"matic\"></Icon>\n        </div>  \n      \n      </div>  \n\n  \n\n    </div>  \n    </div>\n\n\n    </div>  \n    <TweetInFeed profile={false}/>\n    </div>\n   \n    </>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}